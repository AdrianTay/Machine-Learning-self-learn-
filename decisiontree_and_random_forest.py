# -*- coding: utf-8 -*-
"""DecisionTree and Random_Forest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sL9PooDHh3Dab62e49VhdwI7nNIb7DMi
"""

import numpy as np
import pandas as pd
import sklearn
import matplotlib.pyplot as plt

from google.colab import files
uploaded = files.upload()

loan = pd.read_csv('lending_club_data01.csv')

loan['good_loans'] = loan['bad_loans'].apply(lambda y: 'yes' if y == 0 else 'no')

loan.columns

x = loan.drop(['bad_loans' , 'good_loans'], axis=1)

y = loan['good_loans']

from sklearn.tree import DecisionTreeClassifier

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(x , y,test_size= 0.3, random_state= 100)

model = DecisionTreeClassifier()

model.fit(x_train, y_train)

predict = model.predict(x_test)

acc = model.score(x_test, y_test)

#never learn before

from sklearn.metrics import classification_report, confusion_matrix

print(confusion_matrix(predict, y_test))  #diagonal off values (top right and bottom left) are misclassified to be either false +ve or false -ve

print(classification_report(predict, y_test))

from sklearn.ensemble import RandomForestClassifier

rf_model = RandomForestClassifier(n_estimators=150)

rf_model.fit(x_train, y_train)

predict1 = rf_model.predict(x_test)
print(predict1)
acc1 = rf_model.score(x_test, y_test)
print(acc1)